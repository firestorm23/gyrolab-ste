# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory: ~
        fos_userbundle:
            id: fos_user.user_manager

    firewalls:
        # admin:
        #     pattern:            /admin(.*)
        #     context:            user
        #     form_login:
        #         provider:       fos_userbundle
        #         login_path:     /admin/login
        #         use_forward:    false
        #         check_path:     /admin/login_check
        #         failure_path:   null
        #     logout:
        #         path:           /admin/logout
        #         target:         /admin/login
        #     anonymous:          true
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login # have also tried fos_user_security_login
                use_forward:    false
                check_path:     /login_check # have also tried fos_user_security_check
                failure_path:   null
                csrf_provider:  form.csrf_provider
                always_use_default_target_path: true
                default_target_path: /admin
            logout:
                path:   /admin/logout
                target: /
            anonymous:          true

        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

#        main:
#            anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

#    role_hierarchy:
#
#          # for convenience, I decided to gather Sonata roles here
#          ROLE_SITE_ARTICLE_READER:
#              - ROLE_SITE_ARTICLE_LIST
#              - ROLE_SITE_ARTICLE_VIEW
#          ROLE_SITE_ARTICLE_ADMIN:
#              - ROLE_SITE_ARTICLE_LIST
#              - ROLE_SITE_ARTICLE_VIEW
#              - ROLE_SITE_ARTICLE_CREATE
#              - ROLE_SITE_ARTICLE_EDIT
#              - ROLE_SITE_ARTICLE_DELETE
#              - ROLE_SITE_ARTICLE_EXPORT
#
#          # those are the roles I will use (less verbose)
#          ROLE_GUEST:       [ROLE_GUEST, ROLE_SITE_ARTICLE_READER]
#          ROLE_ADMIN:       [ROLE_ADMIN, ROLE_SITE_ARTICLE_ADMIN]
#
#      # set access_strategy to unanimous, else you may have unexpected behaviors
#    access_decision_manager:
#        strategy: unanimous
    encoders:
            FOS\UserBundle\Model\UserInterface: sha512

    acl:
        connection: default

    role_hierarchy:
            ROLE_SITE_ARTICLE_ADMIN:
                - ROLE_SITE_ARTICLE_LIST
                - ROLE_SITE_ARTICLE_VIEW
                - ROLE_SITE_ARTICLE_CREATE
                - ROLE_SITE_ARTICLE_EDIT
                - ROLE_SITE_ARTICLE_DELETE
                - ROLE_SITE_ARTICLE_EXPORT
            ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_SITE_ARTICLE_ADMIN]
            ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#            SONATA:
#                - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commente


#    firewalls:
#        # -> end custom configuration
#
#        # default login area for standard users
#
#        # This firewall is used to handle the public login area
#        # This part is handled by the FOS User Bundle
#        main:
#            pattern:             ^/
#            context:             user
#            form_login:
#                provider: fos_userbundle
#                csrf_provider: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
#                username_parameter: _username
#                password_parameter: _password
#                csrf_parameter: _csrf_token
#
#                remember_me:
#                    key: "%secret%"
#                    lifetime: 86400
#                    path: /
#                    remember_me_parameter: _remember_me
#
#                logout:       true
#                anonymous:    true
#
#        admin:
#            pattern:            /admin(.*)
#            context:            user
#            form_login:
#                provider:       fos_userbundle
#                login_path:     /admin/login
#                use_forward:    false
#                check_path:     /admin/login_check
#                failure_path:   null
#            logout:
#                path:           /admin/logout
#                target:         /admin/login
#            anonymous:          true
#
#        # Disabling the security for the web debug toolbar, the profiler and Assetic.
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        # -> custom firewall for the admin area of the URL


    access_control:
          # URL of FOSUserBundle which need to be available to anonymous users
          - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

          # Admin login page needs to be accessed without credential
          - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

          # Secured part of the site
          # This config requires being logged for the whole site and having the admin role for the admin part.
          # Change these rules to adapt them to your needs
          - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
          - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }